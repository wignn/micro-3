services:
  account:
    build:
      context: .
      dockerfile: ./account/app.dockerfile
    depends_on:
      - account_db
    environment:
      DATABASE_URL: postgres://wignn:123456@account_db/account?sslmode=disable
      PORT: 8080
    restart: on-failure

  catalog:
    build:
      context: .
      dockerfile: ./catalog/app.dockerfile
    depends_on:
      - catalog_db
    environment:
      DATABASE_URL: http://catalog_db:9200
      PORT: 8080
    restart: on-failure

  order:
    build:
      context: .
      dockerfile: ./order/app.dockerfile
    depends_on:
      - order_db
    environment:
      DATABASE_URL: postgres://wignn:123456@order_db/order?sslmode=disable
      ACCOUNT_SERVICE_URL: account:8080
      CATALOG_SERVICE_URL: catalog:8080
      PORT: 8080
    restart: on-failure

  review:
    build:
      context: .
      dockerfile: ./review/app.dockerfile
    depends_on:
      - review_db
    environment:
      DATABASE_URL: postgres://wignn:123456@review_db/review?sslmode=disable
      PORT: 8080
    restart: on-failure

  auth:
    build:
      context: .
      dockerfile: ./auth/app.dockerfile
    depends_on:
      - auth_db
    environment:
      DATABASE_URL: postgres://wignn:123456@auth_db/auth?sslmode=disable
      PORT: 8080
      ACCESS_SECRET_KEY: sivlia
      REFRESH_SECRET_KEY: sivlia2
    restart: on-failure


  graphql:
    build:
      context: .
      dockerfile: ./graphql/app.dockerfile
    ports:
      - 8000:8080
    depends_on:
      - account
      - catalog
      - order
      - review
      - auth
    environment:
      ACCOUNT_SERVICE_URL: account:8080
      CATALOG_SERVICE_URL: catalog:8080
      ORDER_SERVICE_URL: order:8080
      REVIEW_SERVICE_URL: review:8080
      AUTH_SERVICE_URL: auth:8080
    restart: on-failure


  account_db:
    build:
      context: ./account
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: account
      POSTGRES_USER: wignn
      POSTGRES_PASSWORD: 123456
    volumes:
      - account_db_data:/var/lib/postgresql/data
    restart: unless-stopped
  

  catalog_db:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    environment:
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      discovery.type: single-node
    volumes:
      - catalog_db_data:/usr/share/elasticsearch/data

  order_db:
    build:
      context: ./order
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: order
      POSTGRES_USER: wignn
      POSTGRES_PASSWORD: 123456
    volumes:
      - order_db_data:/var/lib/postgresql/data  
    restart: unless-stopped

  review_db:
    build: 
      context: ./review
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: review
      POSTGRES_USER: wignn
      POSTGRES_PASSWORD: 123456
    volumes:
      - review_db_data:/var/lib/postgresql/data
    restart: unless-stopped

  auth_db:
    build:
      context: ./auth
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: wignn
      POSTGRES_PASSWORD: 123456
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: unless-stopped

  connect:
    image: debezium/connect:2.6
    depends_on:
      - kafka
      - zookeeper
    ports:
      - 8083:8083
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: connect-cluster
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-status
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      REST_ADVERTISED_HOST_NAME: connect
      PLUGIN_PATH: /kafka/connect,/usr/share/java,/usr/share/confluent-hub-components
    restart: unless-stopped
    
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    container_name: kafka-ui
    ports:
      - 4000:8080
    depends_on:
      - kafka
      - zookeeper
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    restart: unless-stopped

volumes:
  account_db_data:
  catalog_db_data:
  order_db_data:
  review_db_data:
  auth_db_data: